#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LM Studio
"""

import requests
import json

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
try:
    from config import LM_STUDIO_URL, LM_STUDIO_MODEL, TIMEOUT
except ImportError:
    LM_STUDIO_URL = "http://localhost:1234/v1/chat/completions"
    LM_STUDIO_MODEL = "local-model"
    TIMEOUT = 30

def test_lm_studio_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LM Studio"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LM Studio...")
    print(f"URL: {LM_STUDIO_URL}")
    print(f"–ú–æ–¥–µ–ª—å: {LM_STUDIO_MODEL}")
    
    try:
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        response = requests.post(
            LM_STUDIO_URL,
            json={
                "model": LM_STUDIO_MODEL,
                "messages": [
                    {
                        "role": "system",
                        "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è git –∫–æ–º–º–∏—Ç–æ–≤. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∫–æ–º–º–∏—Ç–∞, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤."
                    },
                    {
                        "role": "user",
                        "content": "–°–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª test.py. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û —Ç–µ–∫—Å—Ç–æ–º –∫–æ–º–º–∏—Ç–∞, –º–∞–∫—Å–∏–º—É–º 30 —Å–∏–º–≤–æ–ª–æ–≤."
                    }
                ],
                "max_tokens": 30,
                "temperature": 0.1
            },
            timeout=TIMEOUT
        )
        
        if response.status_code == 200:
            result = response.json()
            message = result['choices'][0]['message']['content']
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìù –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: '{message}'")
            print(f"üìä –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            print("üîç –ê–Ω–∞–ª–∏–∑ —Å–∏–º–≤–æ–ª–æ–≤:")
            for i, char in enumerate(message):
                if char == '\n':
                    print(f"  [{i}]: '\\n' (–ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏)")
                elif char == '\r':
                    print(f"  [{i}]: '\\r' (–≤–æ–∑–≤—Ä–∞—Ç –∫–∞—Ä–µ—Ç–∫–∏)")
                elif char == '\t':
                    print(f"  [{i}]: '\\t' (—Ç–∞–±—É–ª—è—Ü–∏—è)")
                elif char == ' ':
                    print(f"  [{i}]: ' ' (–ø—Ä–æ–±–µ–ª)")
                else:
                    print(f"  [{i}]: '{char}'")
            
            return True, message
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            return False, None
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ LM Studio")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("   - LM Studio –∑–∞–ø—É—â–µ–Ω")
        print("   - –°–µ—Ä–≤–µ—Ä –≤–∫–ª—é—á–µ–Ω (Server -> Start Server)")
        print("   - URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost:1234)")
        return False, None
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º-–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ LM Studio")
        return False, None
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False, None

def test_clean_function():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
    try:
        from auto_commit import clean_commit_message
    except ImportError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é clean_commit_message")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        "think: –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "I think: –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª", 
        "Let me think... –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "–î—É–º–∞—é, —á—Ç–æ –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "–î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "\"–î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª\"",
        "'–î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª'",
        "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "–ö–æ–º–º–∏—Ç: –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "think\n–î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª",
        "think –î–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ñ–∞–π–ª"
    ]
    
    for test_input in test_cases:
        cleaned = clean_commit_message(test_input)
        print(f"–í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: '{test_input}'")
        print(f"–û—á–∏—â–µ–Ω–Ω–∞—è: '{cleaned}'")
        print("---")

if __name__ == "__main__":
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å 'think' –≤ –∫–æ–º–º–∏—Ç–∞—Ö\n")
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    success, raw_message = test_lm_studio_connection()
    
    if success and raw_message:
        # –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏
        test_clean_function()
        
        # –ü—Ä–∏–º–µ–Ω–∏–º –æ—á–∏—Å—Ç–∫—É –∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        try:
            from auto_commit import clean_commit_message
            cleaned = clean_commit_message(raw_message)
            print(f"\nüîß –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏:")
            print(f"–ò—Å—Ö–æ–¥–Ω–æ–µ: '{raw_message}'")
            print(f"–û—á–∏—â–µ–Ω–Ω–æ–µ: '{cleaned}'")
        except ImportError:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ LM Studio")
